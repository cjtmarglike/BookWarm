<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.book.warm.mapper.ReviewBoardMapper">
 
 	<!-- <select id="selectBoardList" resultType="com.book.warm.vo.ReviewBoardVO2">
 	
 		select * from
		(
		    select review_no, user_id, review_written_date, review_modify_date, isbn, 
		    	review_ref, review_title, review_content, review_open, 
		    	rank() over(partition by isbn order by review_modify_date desc, review_no desc) rk 
		    from review_board
		) sub, book_cover bc
		where sub.rk = 1 and sub.isbn=bc.isbn
		and user_id = #{user_id}
		
 	</select> -->
 	
 	<!-- <select id="selectBoardList" resultMap="reviewPerBookResult">
 		select review_no, user_id, review_written_date, review_modify_date, sub.isbn, 
		    	review_ref, review_title, review_content, review_open, book_title, writer_name, book_img
		from
		(
		    select review_no, user_id, review_written_date, review_modify_date, isbn, 
		    	review_ref, review_title, review_content, review_open, 
		    	rank() over(partition by isbn order by review_modify_date desc, review_no desc) rk 
		    from review_board
		) sub, book b
		where sub.rk = 1 and sub.isbn=b.isbn
         		and user_id = #{user_id}
 	</select>
 	
 	<resultMap type="com.book.warm.vo.BookVO" id="bookRef">
 		<id property="isbn" column = "isbn"/>
 		<result property="book_title" column="book_title"/>
 		<result property="writer_name" column="writer_name"/>
 		<result property="translator_name" column="translator_name"/>
 		<result property="publisher_name" column="publisher_name"/>
 		<result property="book_tot_page" column="book_tot_page"/>
 		<result property="book_published_date" column="book_published_date"/>
 		<result property="book_price" column="book_price"/>
 		<result property="book_price_for_sale" column="book_price_for_sale"/>
 		<result property="book_stock" column="book_stock"/>
 		<result property="book_story" column="book_story"/>
 		<result property="book_img" column="book_img"/>
 	</resultMap>
 	
 	<resultMap type="com.book.warm.vo.ReviewBoardVO" id="reviewPerBookResult">
 		<id property="review_no" column="review_no"/>
 		<result property="user_id" column="user_id"/>
 		<result property="review_written_date" column="review_written_date"/>
 		<result property="review_modify_date" column="review_modify_date"/>
 		<result property="isbn" column="isbn"/>
 		<result property="review_ref" column="review_ref"/>
 		<result property="review_title" column="review_title"/>
 		<result property="review_content" column="review_content"/>
 		<result property="review_open" column="review_open"/>
 		<association property="bookRef" />
 	</resultMap> -->
 	
 	
 	<select id="getListPerBook" resultType="com.book.warm.vo.ReviewBoardVO">
 		select * from review_board where isbn = #{param1} and user_id = #{param2} 
 		order by review_written_date desc
 	</select>
 	
 	<select id="getListPerBookWithPaging" resultType="com.book.warm.vo.ReviewBoardVO">
 	
		<![CDATA[
		 select 
		 	review_no, user_id, review_written_date, review_modify_date,
			isbn, review_ref, review_title, review_content, review_open
		 from
		 	(
		 	select /*+INDEX_DESC(review_board pk_review_board) */
		 		rownum rn, review_no, user_id, review_written_date, review_modify_date,
				isbn, review_ref, review_title, review_content, review_open
		 	from review_board where (isbn = #{param1} and user_id = #{param2})
		 	and rownum <=#{param3.pageNum} * #{param3.amount} 
		 	)
		 where rn > (#{param3.pageNum}-1) * #{param3.amount}
		]]> 	
 	
 	</select>
 	
 	<select id="getTotalCount" resultType="int">
 		
 		select count(*) from review_board where isbn = #{param2} and user_id = #{param3} 
 		order by review_written_date desc
 	
 	</select>
 	
 	<select id="showBookThumbnail" resultType="com.book.warm.vo.BookVO">
 		select book_img, book_title, writer_name
		from book
		where isbn = #{isbn} 
		
 	</select>
 	
 	<select id="selectedReview" resultType="com.book.warm.vo.ReviewBoardVO">
 		select * from review_board where review_no = #{param1} and user_id = #{param2}
 	</select>
 	
 	<select id="bookInfo" resultType="com.book.warm.vo.BookVO">
 		select * from book where isbn = #{isbn}
 	</select>
 	
 	<insert id="registerReview" parameterType="com.book.warm.vo.ReviewBoardVO">
 		insert into review_board
 				(
 				review_no, user_id,
 				isbn, review_ref, review_title, review_content, review_open
 				) 
		values (
				review_board_seq.nextval, #{user_id}, #{isbn}, #{review_ref}, 
 		 		#{review_title}, #{review_content}, #{review_open}
 		 		)
 	</insert>
 	
 	<insert id="registerReviewSelectKey" parameterType="com.book.warm.vo.ReviewBoardVO">
 		<selectKey keyProperty="review_no" order="BEFORE" resultType="int">
 			select review_board_seq.nextval from dual
 		</selectKey>
 		
 		insert into review_board
 				(
 				review_no, user_id,
 				isbn, review_ref, review_title, review_content, review_open
 				) 
		values (
				#{review_no}, #{user_id}, #{isbn}, #{review_ref}, 
 		 		#{review_title}, #{review_content}, #{review_open}
 		 		)
 	</insert>
 	
 	<delete id="deleteReview">
 		delete from review_board where user_id=#{user_id} and review_no=#{review_no}
 	</delete>
 	
 	<update id="modifyReview">
 		update review_board
		set review_modify_date=sysdate, review_title=#{review_title}, review_content=#{review_content},
    		review_ref=#{review_ref}, review_open=#{review_open}
		where user_id=#{user_id} and review_no=#{review_no}
 	</update>
 	
 	
 	<!-- 첨부파일 처리. 따로 mapper를 만들지 않고 여기에 추가. -->
 	<insert id="insert">
 		insert into review_attach(uuid, uploadpath, filename, review_no)
 		values (#{uuid}, #{uploadPath}, #{fileName}, #{review_no})
 	</insert>
 
 	<delete id="delete">
 		delete from review_attach where uuid = #{uuid}
 	</delete>
	
	<select id="findByReviewNo" resultType="com.book.warm.vo.ReviewAttachVO">
		select * from review_attach where review_no = #{review_no}
	</select>
	
	<delete id="deleteAll">
		delete review_attach where review_no = #{review_no}
	</delete>
	
	<select id="getOldFiles" resultType="com.book.warm.vo.ReviewAttachVO">
		select * from review_attach where uploadpath = to_char(sysdate -1, 'yyyy\mm\dd')
	</select>
	
 </mapper>