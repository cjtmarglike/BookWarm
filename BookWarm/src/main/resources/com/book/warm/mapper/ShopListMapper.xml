<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.book.warm.mapper.ShopListMapper">

	<!-- 제목순으로 책 불러오기 -->
	<select id="shoptitlelist" resultType="com.book.warm.vo.BookVO">
	select isbn, book_title, writer_name, translator_name, publisher_name, publisher_name, book_tot_page, book_published_date, 
            book_price, book_price_for_sale, book_stock, book_story, book_img
	from book
o	order by book_title
	</select> 
	
	<!-- 가격순(저렴한 순)으로 불러오기  -->
	<select id="bookpricelist" resultType="com.book.warm.vo.BookVO">
	select isbn, book_title, writer_name, translator_name, publisher_name, publisher_name, book_tot_page, book_published_date, 
            book_price, book_price_for_sale, book_stock, book_story, book_img
	from book
o	order by book_price_for_sale
	</select> 
	
	<!-- isbn && write_name 으로 bookdetail 불러오기   -->
	<select id="bookdetail" resultType="com.book.warm.vo.BookVO">
	select * from book
	where isbn = #{isbn} and writer_name = #{writer_name}
	</select>
	
	<!-- bookwritername 저자이름이 같은 다른 책들 불러오기 -->
	<select id="bookwritername" resultType="com.book.warm.vo.BookVO">
	<![CDATA[
	select * from (select * from book
                order by book_title)
	where writer_name = #{writer_name} 
	and rownum <= 5
	]]> 
	</select>

	<!-- 책에 대한 별 점수 가져오기  -->
	<select id="bookstar" resultType="com.book.warm.vo.BookVO">
	select b.isbn, b.book_title, bs.user_id, bs.star
	from book b, book_star bs
	where b.isbn = bs.isbn
a	and b.isbn = #{isbn} 
	and bs.user_id = #{user_id}
	and bs.star = #{star};
	</select>

<!-- 	
	
	
	페이징처리
	<select id="shoplistpage" resultType="com.book.warm.vo.ShopListBoardVO">
	<![CDATA[
	select isbn, book_title, book_price, book_price_for_sale, writer_name, translator_name, publisher_name , 
       		 book_tot_page, book_intro, book_idx, book_story, BOOK_IMG, genre
	from (
       		 select/*index_desc(book SYS_C007190)*/ 
            		rownum rn, book.isbn, book_title, book_price, book_price_for_sale, writer_name, translator_name, publisher_name, 
             		book_tot_page, book_intro, book_idx, book_story, BOOK_IMG, genre 
      			  from  book, publisher, writer, translator, category
        			where book.publisher_no = publisher.publisher_no 
              		and writer.writer_no = book.writer_no
                	and book.translator_no = translator.translator_no
               		and book.isbn = category.isbn    
               		and rownum <= #{pageNum} * #{amount})
	where rn > (#{pageNum}-1) * #{amount}
   ]]>
	</select>
	
	페이징처리
	<select id="shoplistpage2" resultType="com.book.warm.vo.ShopListBoardVO">
	<![CDATA[
	select isbn, book_title, book_price, book_price_for_sale, writer_name, translator_name, publisher_name , 
       		 book_tot_page, book_intro, book_idx, book_story, BOOK_IMG, genre
	from (
       		 select/*index_desc(book SYS_C007190)*/ 
            		rownum rn, book.isbn, book_title, book_price, book_price_for_sale, writer_name, translator_name, publisher_name, 
             		book_tot_page, book_intro, book_idx, book_story, BOOK_IMG, genre 
      			  from  book, publisher, writer, translator, category
        			where book.publisher_no = publisher.publisher_no 
              		and writer.writer_no = book.writer_no
                	and book.translator_no = translator.translator_no
               		and book.isbn = category.isbn    
               		and rownum <= #{pageNum} * #{amount})
	where rn > (#{pageNum}-1) * #{amount}
	order by book_title
   ]]>
	</select>
	
	
	
	
	
	전체 페이지처리 
	<select id="gettotalcount" resultType="int">
		select count(*) from book, publisher, writer, translator, category
		where book.publisher_no = publisher.publisher_no 
              		and writer.writer_no = book.writer_no
                	and book.translator_no = translator.translator_no
               		and book.isbn = category.isbn    
	</select> -->
</mapper>