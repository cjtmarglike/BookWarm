<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.book.warm.mapper.ShopMapper">
	<select id="cartList" resultType="com.book.warm.vo.CartJoinBookVO">
		select c.*, b.book_title, b.book_price_for_sale, b.book_img, c.cart_cnt*b.book_price_for_sale as total
		from cart c inner join book b
		on c.isbn = b.isbn
		where c.user_id = #{user_id}
	</select>
	
	<delete id="removeCart">
		delete from cart where user_id = #{user_id} and isbn = #{isbn}
	</delete>
	
	<update id="updateCnt">
		update cart 
		set cart_cnt=#{cart_cnt} 
		where cart_no=#{cart_no}
	</update>
	
	<select id="getCartOne" resultType="com.book.warm.vo.CartJoinBookVO">
		select c.*, b.book_title, b.book_price_for_sale, b.book_img, c.cart_cnt*b.book_price_for_sale as total
		from cart c inner join book b
		on c.isbn = b.isbn
		where cart_no=#{cart_no}
	</select>
	
	<!-- 추가  -->
	<!-- 장바구니에 아무것도 없을 경우 책 뿌려주기  -->
	<select id="insertcart" parameterType="com.book.warm.vo.CartVO">
	insert into cart(cart_no, user_id, isbn, cart_cnt)
	values(CART_SEQ.nextval,  #{user_id}, #{isbn}, 1)
	</select>
	<!-- 장바구니에 똑같은 책이 있다면 수량만 올려주기 -->
	<update id="updatecart">
	 update cart
	 set cart_cnt = cart_cnt + #{cart_cnt}
	 where user_id = #{user_id}
	 and isbn = #{isbn}
	</update>
	
<!-- 	<select id="countcart" resultType="int">
	select count(*)
 	from cart
 	where user_id = #{user_id}
 	and isbn = #{isbn}
	</select> -->
	<select id="getUserInfo" resultType="com.book.warm.vo.UserVO">
		select user_id, user_name, user_phone, user_zipcode, user_addr, user_addr_detail, user_tot_price, user_point
		from user_info
		where user_id=#{user_id}
	</select>
	
	<select id="getCouponList" resultType="com.book.warm.vo.CouponVO">
		<![CDATA[
			select t1.coupon_no, t1.coupon_name, t1.coupon_req, t1.coupon_use_req, t1.coupon_discount_percent, t1.coupon_validate
			from (select c1.user_id, c2.*
			    from coupon_no c1 inner join coupon c2
			    on c1.coupon_no = c2.coupon_no
			    where c1.user_id=#{user_id} 
			        and c1.coupon_available='t' 
			        and c2.coupon_validate>sysdate) t1 inner join
			    (select user_id, user_level
			    from user_info
			    where user_id=#{user_id}) t2
			on t1.user_id = t2.user_id
			where t1.coupon_req<=t2.user_level
			order by t1.coupon_no
		]]>
	</select>
	
	
</mapper>






